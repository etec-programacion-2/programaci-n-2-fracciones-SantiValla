/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example
import java.util.Scanner

 fun main() {
       val scanner = Scanner(System.`in`)
       var opcion: Int
       
       do {
           mostrarMenu()
           opcion = scanner.nextInt()
           
           when (opcion) {
               1 -> realizarSuma(scanner)
               2 -> realizarResta(scanner)
               3 -> realizarMultiplicacion(scanner)
               4 -> realizarDivision(scanner)
               5 -> realizarComparacion(scanner)
               6 -> convertirADecimal(scanner)
               7 -> crearDesdeDecimal(scanner)
               8 -> mostrarEjemplos()
               0 -> println("¡Hasta luego!")
               else -> println("Opción inválida. Intente de nuevo.")
           }
           
           if (opcion != 0) {
               println("\nPresione Enter para continuar...")
               scanner.nextLine() // Limpiar buffer
               scanner.nextLine() // Esperar Enter
           }
       } while (opcion != 0)
       
       scanner.close()
   }
fun mostrarMenu() {
       println("=== CALCULADORA DE FRACCIONES ===")
       println("1. Sumar fracciones")
       println("2. Restar fracciones")
       println("3. Multiplicar fracciones")
       println("4. Dividir fracciones")
       println("5. Comparar fracciones")
       println("6. Convertir fracción a decimal")
       println("7. Crear fracción desde decimal")
       println("8. Ejemplos predefinidos")
       println("0. Salir")
       println("Ingrese su opción: ")
   }
fun leerFraccion(scanner: Scanner, mensaje: String): Fraccion {
       println(mensaje)
       print("Numerador: ")
       val numerador = scanner.nextInt()
       print("Denominador: ")
       val denominador = scanner.nextInt()
       return Fraccion(numerador, denominador)
   }
      fun mostrarEjemplos() {
       println("\n=== EJEMPLOS PREDEFINIDOS ===")
       
       val f1 = Fraccion(1, 2)  // 1/2
       val f2 = Fraccion(1, 3)  // 1/3
       val decimal = 0.5
       val fdecimal = Fraccion.desdeDecimal(decimal)
       println("Fracción 1: $f1")
       println("Fracción 2: $f2")
       println("Suma: $f1 + $f2 = ${f1 + f2}")
       println("Resta: $f1 - $f2 = ${f1 - f2}")
       println("Multiplicación: $f1 * $f2 = ${f1 * f2}")
       println("División: $f1 / $f2 = ${f1 / f2}")
       println("¿$f1 = $f2? ${f1 == f2}")
       println("¿$f1 > $f2? ${f1 > f2}")
       println("¿$f1 < $f2? ${f1 < f2}")
       println("$f1 en decimal: ${f1.aDecimal()}")
       println("Decimal $decimal como fracción: $fdecimal")}
      
 fun realizarSuma(scanner: Scanner) {
    try {
        val f1 = leerFraccion(scanner, "Ingrese la primera fracción:")
        val f2 = leerFraccion(scanner, "Ingrese la segunda fracción:")
        val resultado = f1 + f2
        println("Resultado: $f1 + $f2 = $resultado")
    } catch (e: Exception) {
        println("Error: ${e.message}")
        scanner.nextLine() // Limpiar buffer
    }}
fun realizarResta(scanner: Scanner) {
    try {
        val f1 = leerFraccion(scanner, "Ingrese la primera fracción:")
        val f2 = leerFraccion(scanner, "Ingrese la segunda fracción:")
        val resultado = f1 - f2
        println("Resultado: $f1 - $f2 = $resultado")
    } catch (e: Exception) {
        println("Error: ${e.message}")
        scanner.nextLine()
    }
}
 fun realizarMultiplicacion(scanner: Scanner) {
    try {
        val f1 = leerFraccion(scanner, "Ingrese la primera fracción:")
        val f2 = leerFraccion(scanner, "Ingrese la segunda fracción:")
        val resultado = f1 * f2
        println("Resultado: $f1 * $f2 = $resultado")
    } catch (e: Exception) {
        println("Error: ${e.message}")
        scanner.nextLine() 
    }}
    fun realizarDivision(scanner: Scanner) {
    try {
        val f1 = leerFraccion(scanner, "Ingrese la primera fracción:")
        val f2 = leerFraccion(scanner, "Ingrese la segunda fracción:")
        val resultado = f1 / f2
        println("Resultado: $f1 / $f2 = $resultado")
    } catch (e: Exception) {
        println("Error: ${e.message}")
        scanner.nextLine() 
    }}
    fun realizarComparacion(scanner: Scanner) {
    try {
        val f1 = leerFraccion(scanner, "Ingrese la primera fracción:")
        val f2 = leerFraccion(scanner, "Ingrese la segunda fracción:")
        println("¿$f1 == $f2? = ${f1 == f2}")
        println("¿$f1 > $f2? = ${f1 > f2}")
        println("¿$f1 < $f2? = ${f1 < f2}")
    } catch (e: Exception) {
        println("Error: ${e.message}")
        scanner.nextLine() 
    }}
    fun convertirADecimal(scanner: Scanner) {
    try {
        val f1 = leerFraccion(scanner, "Ingrese la fracción:")
        println("$f1 en decimal: ${f1.aDecimal()}")
    } catch (e: Exception) {
        println("Error: ${e.message}")
        scanner.nextLine() 
    }}
fun crearDesdeDecimal(scanner: Scanner) {
    try {
        print("Ingrese un número decimal: ")
        val decimal = scanner.nextDouble()
        val fdecimal = Fraccion.desdeDecimal(decimal)
        println("Decimal $decimal como fracción: $fdecimal")
    } catch (e: Exception) {
        println("Error: ${e.message}")
        scanner.nextLine() 
    }
}
